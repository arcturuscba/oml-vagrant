; Copyright (C) 2018 Freetech Solutions

; This file is part of OMniLeads

; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.

; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.

; You should have received a copy of the GNU General Public License
; along with this program.  If not, see http://www.gnu.org/licenses/.

;
[general]
static=yes
writeprotect=no
autofallthrough=yes
writeprotect=no
extenpatternmatchnew=yes
clearglobalvars=yes
;userscontext=default

[globals]



[from-pstn]
exten => _X.,1,Verbose(2, llamada desde un abonado hacia OML)
same => n,Dial(SIP/${EXTEN}/${EXTEN})
same => n,Hangup()

[from-oml]
exten => 03514149090,1,Dial(SIP/${EXTEN})
same => n,Hangup()

exten => _X.,1,Verbose(2, llamada desde un OML)
same => n,Set(QUITAR=$[${LEN(${EXTEN})}-1])
same => n,GotoIf($["${EXTEN:${QUITAR}}" == "0"]?busy)
same => n,GotoIf($["${EXTEN:${QUITAR}}" == "5"]?noAns)
same => n,GotoIf($["${EXTEN:${QUITAR}}" == "9"]?congestion)
same => n,Answer()
same => n,Wait(5)
same => n,Playback(demo-congrats)
same => n,Hangup()
same => n(busy),Busy(5)
same => n,Hangup()
same => n(noAns),Wait(120)
same => n,Hangup()
same => n(busy),Congestion()
same => n,Hangup()


[from-ics]
exten => _X.,1,Verbose(2, llamada desde un ICS)
same => n,Set(QUITAR=$[${LEN(${EXTEN})}-1])
same => n,GotoIf($["${EXTEN:${QUITAR}}" == "0"]?busy)
same => n,GotoIf($["${EXTEN:${QUITAR}}" == "5"]?noAns)
same => n,GotoIf($["${EXTEN:${QUITAR}}" == "9"]?congestion)
same => n,Answer()
same => n,Wait(5)
same => n,Playback(demo-congrats)
same => n,Hangup()
same => n(dtmf1),SendDTMF(1)
same => n,Hangup()
same => n(dtmf2),SendDTMF(2)
same => n,Hangup()
same => n(dtmf3),SendDTMF(3)
same => n,Hangup()
